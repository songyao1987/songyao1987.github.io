<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="4.2.2">Jekyll</generator><link href="http://localhost:4000/feed.xml" rel="self" type="application/atom+xml" /><link href="http://localhost:4000/" rel="alternate" type="text/html" /><updated>2022-07-26T12:27:05+08:00</updated><id>http://localhost:4000/feed.xml</id><title type="html">EricSong</title><entry><title type="html">How to publish your android library to MavenCenter</title><link href="http://localhost:4000/2021/05/06/publish-mavencenter.html" rel="alternate" type="text/html" title="How to publish your android library to MavenCenter" /><published>2021-05-06T00:00:00+08:00</published><updated>2021-05-06T00:00:00+08:00</updated><id>http://localhost:4000/2021/05/06/publish-mavencenter</id><content type="html" xml:base="http://localhost:4000/2021/05/06/publish-mavencenter.html"><![CDATA[<p>I will take my first published library as an example and make this a single source of guidance for all of you who are interested in publishing Android libraries.
<!--more--></p>

<p>Step 1: Registering a Jira account with Sonatype, and verifying your ownership of the group ID you want to publish your artifact with.
While login in with your Jira account registered above,you need to create a Jira ticket and it will be assigned automatically.Notes the 
Issue type must be “New Project” and select Project as “Community Support - Open Source Project Repository Hosting (OSSRH)”.</p>

<p>On the next page, fill out the following fields:</p>

<p>Summary: Create repository for your.group.id.here</p>

<p>Description: An optional, quick summary of what your project is.</p>

<p>Group Id: Your group ID, as described a few sections earlier.</p>

<p>Project URL: If your project has a webpage, the URL of that page. This can also be just the GitHub repository.</p>

<p>SCM url: Your source control URL, i.e. the GitHub repository link.</p>

<p>Username(s): If you want additional users (on top of the one you’re using for this process) to have deploy access for your group ID,you can list them here.</p>

<p>Already Synced to Central: If you’re just getting started, this should be No.</p>

<p>Soon after opening it, your issue will get a comment telling you to verify that you own the domain corresponding to your group ID:</p>

<p><img src="/assets/images/jira_verify.png" style="width:625px;height:240px;" /></p>

<p>When done, don’t forget to leave a comment on the issue so that Sonatype knows to check the record. You’ll eventually get a response telling you that you now have deploy rights - congrats!
Below is Done for my ticket.</p>

<p><img src="/assets/images/jira_sonatype.png" style="width:625px;height:240px;" /></p>

<p>Step 2: Generating a GPG key pair for signing your artifacts, publishing your public key, and exporting your private key.
GPG Suite is an easy-to-use distribution for macOS, and you can use Gpg4win if you’re on Windows. Both of these come with GUI tools 
that make managing keys easier.
To generate a new key, run the following command:</p>

<figure class="highlight"><pre><code class="language-javascript" data-lang="javascript"><span class="nx">gpg</span> <span class="o">--</span><span class="nx">full</span><span class="o">-</span><span class="nx">gen</span><span class="o">-</span><span class="nx">key</span></code></pre></figure>

<p>You’ll be prompted to enter a few details:
Kind of key: Accept the default value, which is (1) RSA and RSA.
Key size: 4096.
Expiration: You can input 0 to generate a key that never expires. You can also create a key that has an expiry date and then renew it 
periodically, if you prefer to do so.
Real name, email: Should be obvious.
Comment: Freeform text, can be left empty.
Here’s the full flow you’ll go through, with a bit of truncation:</p>

<figure class="highlight"><pre><code class="language-javascript" data-lang="javascript"><span class="nx">Please</span> <span class="nx">select</span> <span class="nx">what</span> <span class="nx">kind</span> <span class="k">of</span> <span class="nx">key</span> <span class="nx">you</span> <span class="nx">want</span><span class="p">:</span>
   <span class="p">(</span><span class="mi">1</span><span class="p">)</span> <span class="nx">RSA</span> <span class="nx">and</span> <span class="nx">RSA</span> <span class="p">(</span><span class="k">default</span><span class="p">)</span>
   <span class="p">...</span>
<span class="nx">Your</span> <span class="nx">selection</span><span class="p">?</span> <span class="mi">1</span>

<span class="nx">RSA</span> <span class="nx">keys</span> <span class="nx">may</span> <span class="nx">be</span> <span class="nx">between</span> <span class="mi">1024</span> <span class="nx">and</span> <span class="mi">4096</span> <span class="nx">bits</span> <span class="nx">long</span><span class="p">.</span>
<span class="nx">What</span> <span class="nx">keysize</span> <span class="k">do</span> <span class="nx">you</span> <span class="nx">want</span><span class="p">?</span> <span class="p">(</span><span class="mi">3072</span><span class="p">)</span> <span class="mi">4096</span>
<span class="nx">Requested</span> <span class="nx">keysize</span> <span class="nx">is</span> <span class="mi">4096</span> <span class="nx">bits</span>

<span class="nx">Please</span> <span class="nx">specify</span> <span class="nx">how</span> <span class="nx">long</span> <span class="nx">the</span> <span class="nx">key</span> <span class="nx">should</span> <span class="nx">be</span> <span class="nx">valid</span><span class="p">.</span>
         <span class="mi">0</span> <span class="o">=</span> <span class="nx">key</span> <span class="nx">does</span> <span class="nx">not</span> <span class="nx">expire</span>
         <span class="p">...</span>
<span class="nx">Key</span> <span class="nx">is</span> <span class="nx">valid</span> <span class="k">for</span><span class="p">?</span> <span class="p">(</span><span class="mi">0</span><span class="p">)</span> <span class="mi">0</span>
<span class="nx">Key</span> <span class="nx">does</span> <span class="nx">not</span> <span class="nx">expire</span> <span class="nx">at</span> <span class="nx">all</span>
<span class="nx">Is</span> <span class="k">this</span> <span class="nx">correct</span><span class="p">?</span> <span class="p">(</span><span class="nx">y</span><span class="o">/</span><span class="nx">N</span><span class="p">)</span> <span class="nx">y</span>

<span class="nx">GnuPG</span> <span class="nx">needs</span> <span class="nx">to</span> <span class="nx">construct</span> <span class="nx">a</span> <span class="nx">user</span> <span class="nx">ID</span> <span class="nx">to</span> <span class="nx">identify</span> <span class="nx">your</span> <span class="nx">key</span><span class="p">.</span>

<span class="nx">Real</span> <span class="nx">name</span><span class="p">:</span> <span class="nx">Marton</span> <span class="nx">Braun</span>
<span class="nx">Email</span> <span class="nx">address</span><span class="p">:</span> <span class="nx">marton</span><span class="p">@</span><span class="nd">getstream</span><span class="p">.</span><span class="nx">io</span>
<span class="nx">Comment</span><span class="p">:</span> <span class="nx">Example</span> <span class="nx">key</span> <span class="k">for</span> <span class="nx">tutorial</span>
<span class="nx">You</span> <span class="nx">selected</span> <span class="k">this</span> <span class="nx">USER</span><span class="o">-</span><span class="nx">ID</span><span class="p">:</span>
    <span class="dl">"</span><span class="s2">Marton Braun (Example key for tutorial) &lt;marton@getstream.io&gt;</span><span class="dl">"</span>

<span class="nx">Change</span> <span class="p">(</span><span class="nx">N</span><span class="p">)</span><span class="nx">ame</span><span class="p">,</span> <span class="p">(</span><span class="nx">C</span><span class="p">)</span><span class="nx">omment</span><span class="p">,</span> <span class="p">(</span><span class="nx">E</span><span class="p">)</span><span class="nx">mail</span> <span class="nx">or</span> <span class="p">(</span><span class="nx">O</span><span class="p">)</span><span class="nx">kay</span><span class="o">/</span><span class="p">(</span><span class="nx">Q</span><span class="p">)</span><span class="nx">uit</span><span class="p">?</span> <span class="nx">O</span>

<span class="nx">gpg</span><span class="p">:</span> <span class="nx">key</span> <span class="mi">36271</span><span class="nx">B955BEF072A</span> <span class="nx">marked</span> <span class="k">as</span> <span class="nx">ultimately</span> <span class="nx">trusted</span>
<span class="nx">gpg</span><span class="p">:</span> <span class="nx">revocation</span> <span class="nx">certificate</span> <span class="nx">stored</span> <span class="k">as</span> <span class="dl">'</span><span class="s1">.../gnupg/openpgp-revocs.d</span><span class="se">\</span><span class="s1">7A5D73CFEDDDBC915986998A36271B955BEF072A.rev</span><span class="dl">'</span>
<span class="kr">public</span> <span class="nx">and</span> <span class="nx">secret</span> <span class="nx">key</span> <span class="nx">created</span> <span class="nx">and</span> <span class="nx">signed</span><span class="p">.</span>

<span class="nx">pub</span>   <span class="nx">rsa4096</span> <span class="mi">2021</span><span class="o">-</span><span class="mi">02</span><span class="o">-</span><span class="mi">03</span> <span class="p">[</span><span class="nx">SC</span><span class="p">]</span>
      <span class="mi">7</span><span class="nx">A5D73CFEDDDBC915986998A36271B955BEF072A</span>
<span class="nx">uid</span>                      <span class="nx">Marton</span> <span class="nx">Braun</span> <span class="p">(</span><span class="nx">Example</span> <span class="nx">key</span> <span class="k">for</span> <span class="nx">tutorial</span><span class="p">)</span> <span class="o">&lt;</span><span class="nx">marton</span><span class="p">@</span><span class="nd">getstream</span><span class="p">.</span><span class="nx">io</span><span class="o">&gt;</span>
<span class="nx">sub</span>   <span class="nx">rsa4096</span> <span class="mi">2021</span><span class="o">-</span><span class="mi">02</span><span class="o">-</span><span class="mi">03</span> <span class="p">[</span><span class="nx">E</span><span class="p">]</span></code></pre></figure>

<p>Your key’s ID is the last eight digits of its fingerprint (the long hexadecimal string above). In this case, this is 5BEF072A - take note of this, as you’ll use this later.</p>

<figure class="highlight"><pre><code class="language-javascript" data-lang="javascript"><span class="nx">gpg</span> <span class="o">--</span><span class="nx">keyserver</span> <span class="nx">keyserver</span><span class="p">.</span><span class="nx">ubuntu</span><span class="p">.</span><span class="nx">com</span> <span class="o">--</span><span class="nx">send</span><span class="o">-</span><span class="nx">keys</span> <span class="mi">5</span><span class="nx">BEF072A</span></code></pre></figure>

<p>Your private key will need to be referenced by your project when it signs the artifacts. You can get a base 64 export of it with the following:</p>

<figure class="highlight"><pre><code class="language-javascript" data-lang="javascript"><span class="nx">gpg</span> <span class="o">--</span><span class="k">export</span><span class="o">-</span><span class="nx">secret</span><span class="o">-</span><span class="nx">keys</span> <span class="mi">5</span><span class="nx">BEF072A</span> <span class="o">|</span> <span class="nx">base64</span></code></pre></figure>

<p>Enter your passphrase that you’ve set earlier when prompted. You can either copy-paste this key from the terminal output later on, or save it to a file temporarily.</p>

<p>Step 3: Setting up Gradle tasks that can sign upload your artifacts to a staging repository.
Below is a sample for publishing artifact in my project.</p>

<figure class="highlight"><pre><code class="language-javascript" data-lang="javascript"><span class="nx">apply</span> <span class="nx">plugin</span><span class="p">:</span> <span class="dl">'</span><span class="s1">maven</span><span class="dl">'</span>
<span class="nx">apply</span> <span class="nx">plugin</span><span class="p">:</span> <span class="dl">'</span><span class="s1">signing</span><span class="dl">'</span>
<span class="nx">def</span> <span class="nx">ossrhUsername</span> <span class="o">=</span> <span class="dl">"</span><span class="s2">ericsong</span><span class="dl">"</span>
<span class="nx">def</span> <span class="nx">ossrhPassword</span> <span class="o">=</span> <span class="dl">"</span><span class="s2">xxxxxxxx</span><span class="dl">"</span>
<span class="nx">def</span> <span class="nx">PUBLISH_GROUP_ID</span> <span class="o">=</span> <span class="dl">'</span><span class="s1">io.github.songyao1987</span><span class="dl">'</span>
<span class="nx">def</span> <span class="nx">PUBLISH_ARTIFACT_ID</span> <span class="o">=</span> <span class="dl">"</span><span class="s2">xxxxToolKit</span><span class="dl">"</span>
<span class="nx">def</span> <span class="nx">PUBLISH_VERSION</span> <span class="o">=</span> <span class="nx">rootProject</span><span class="p">.</span><span class="nx">ext</span><span class="p">.</span><span class="nx">VERSION_NAME</span>
<span class="nx">signing</span> <span class="p">{</span>
    <span class="nx">required</span> <span class="p">{</span> <span class="nx">gradle</span><span class="p">.</span><span class="nx">taskGraph</span><span class="p">.</span><span class="nx">hasTask</span><span class="p">(</span><span class="dl">"</span><span class="s2">uploadArchives</span><span class="dl">"</span><span class="p">)</span> <span class="p">}</span>
    <span class="nx">sign</span> <span class="nx">configurations</span><span class="p">.</span><span class="nx">archives</span>
<span class="p">}</span>

<span class="nx">uploadArchives</span> <span class="p">{</span>
    <span class="nx">repositories</span> <span class="p">{</span>
        <span class="nx">mavenDeployer</span> <span class="p">{</span>
            <span class="nx">beforeDeployment</span> <span class="p">{</span> <span class="nx">MavenDeployment</span> <span class="nx">deployment</span> <span class="o">-&gt;</span> <span class="nx">signing</span><span class="p">.</span><span class="nx">signPom</span><span class="p">(</span><span class="nx">deployment</span><span class="p">)</span> <span class="p">}</span>
            <span class="nx">repository</span><span class="p">(</span><span class="nx">url</span><span class="p">:</span> <span class="dl">"</span><span class="s2">https://s01.oss.sonatype.org/service/local/staging/deploy/maven2/</span><span class="dl">"</span><span class="p">)</span> <span class="p">{</span>
                <span class="nx">authentication</span><span class="p">(</span><span class="nx">userName</span><span class="p">:</span> <span class="nx">ossrhUsername</span><span class="p">,</span> <span class="nx">password</span><span class="p">:</span> <span class="nx">ossrhPassword</span><span class="p">)</span>
            <span class="p">}</span>
            <span class="nx">snapshotRepository</span><span class="p">(</span><span class="nx">url</span><span class="p">:</span> <span class="dl">"</span><span class="s2">https://s01.oss.sonatype.org/content/repositories/snapshots/</span><span class="dl">"</span><span class="p">)</span> <span class="p">{</span>
                <span class="nx">authentication</span><span class="p">(</span><span class="nx">userName</span><span class="p">:</span> <span class="nx">ossrhUsername</span><span class="p">,</span> <span class="nx">password</span><span class="p">:</span> <span class="nx">ossrhPassword</span><span class="p">)</span>
            <span class="p">}</span>
            <span class="nx">pom</span><span class="p">.</span><span class="nx">groupId</span> <span class="o">=</span> <span class="nx">PUBLISH_GROUP_ID</span>
            <span class="nx">pom</span><span class="p">.</span><span class="nx">artifactId</span> <span class="o">=</span> <span class="nx">PUBLISH_ARTIFACT_ID</span>
            <span class="nx">pom</span><span class="p">.</span><span class="nx">version</span> <span class="o">=</span> <span class="nx">PUBLISH_VERSION</span>
            <span class="nx">pom</span><span class="p">.</span><span class="nx">project</span> <span class="p">{</span>
                <span class="nx">name</span> <span class="dl">'</span><span class="s1">xxxxToolKit</span><span class="dl">'</span>
                <span class="nx">packaging</span> <span class="dl">'</span><span class="s1">aar</span><span class="dl">'</span>
                <span class="c1">// optionally artifactId can be defined here</span>
                <span class="nx">description</span> <span class="dl">'</span><span class="s1">For Minesec development use only</span><span class="dl">'</span>
                <span class="nx">url</span> <span class="dl">'</span><span class="s1">https://github.com/songyao1987/xxxxToolKit</span><span class="dl">'</span>
                <span class="nx">scm</span> <span class="p">{</span>
                    <span class="nx">connection</span> <span class="dl">'</span><span class="s1">scm:https://github.com/songyao1987/xxxxToolKit.git</span><span class="dl">'</span>
                    <span class="nx">developerConnection</span> <span class="dl">'</span><span class="s1">scm:git@github.com:songyao1987/xxxxToolKit.git</span><span class="dl">'</span>
                    <span class="nx">url</span> <span class="dl">'</span><span class="s1">https://github.com/songyao1987/xxxxToolKit</span><span class="dl">'</span>
                <span class="p">}</span>
                <span class="nx">licenses</span> <span class="p">{</span>
                    <span class="nx">license</span> <span class="p">{</span>
                        <span class="nx">name</span> <span class="dl">'</span><span class="s1">The Apache License, Version 2.0</span><span class="dl">'</span>
                        <span class="nx">url</span> <span class="dl">'</span><span class="s1">http://www.apache.org/licenses/LICENSE-2.0.txt</span><span class="dl">'</span>
                    <span class="p">}</span>
                <span class="p">}</span>
                <span class="nx">developers</span> <span class="p">{</span>
                    <span class="nx">developer</span> <span class="p">{</span>
                        <span class="nx">id</span> <span class="dl">'</span><span class="s1">ericsong</span><span class="dl">'</span>
                        <span class="nx">name</span> <span class="dl">'</span><span class="s1">ericsong</span><span class="dl">'</span>
                        <span class="nx">email</span> <span class="dl">'</span><span class="s1">413142768@qq.com</span><span class="dl">'</span>
                    <span class="p">}</span>
                <span class="p">}</span>
            <span class="p">}</span>
        <span class="p">}</span>
    <span class="p">}</span>
<span class="p">}</span></code></pre></figure>

<p>Finally,do not forgot to add the reference in build.gradle of Module directoy for the above script</p>

<figure class="highlight"><pre><code class="language-javascript" data-lang="javascript"><span class="nx">apply</span> <span class="k">from</span><span class="p">:</span> <span class="dl">'</span><span class="s1">../maven-publish-aar.gradle</span><span class="dl">'</span></code></pre></figure>

<p>Step 4: Manually going through the process of checking your artifacts in the staging repo and releasing them via the Sonatype web UI.</p>

<p>Step 5: Automating the close &amp; release flow with a Gradle plugin</p>

<p>Step 6: Configuring CI workflows with GitHub Actions to automate all of the above</p>

<p><img src="https://images.unsplash.com/photo-1657659448918-f54b8cdc3c67?ixlib=rb-1.2.1&amp;ixid=MnwxMjA3fDB8MHx0b3BpYy1mZWVkfDQ2fEpwZzZLaWRsLUhrfHxlbnwwfHx8fA%3D%3D&amp;auto=format&amp;fit=crop&amp;w=500&amp;q=60" /></p>]]></content><author><name></name></author><category term="Jira" /><category term="MavenCenter" /><category term="Github" /><category term="Android" /><category term="Groovy" /><category term="Java" /><summary type="html"><![CDATA[I will take my first published library as an example and make this a single source of guidance for all of you who are interested in publishing Android libraries.]]></summary></entry><entry><title type="html">How to config SSL in Jenkins</title><link href="http://localhost:4000/2020/03/02/cicd-02.html" rel="alternate" type="text/html" title="How to config SSL in Jenkins" /><published>2020-03-02T00:00:00+08:00</published><updated>2020-03-02T00:00:00+08:00</updated><id>http://localhost:4000/2020/03/02/cicd-02</id><content type="html" xml:base="http://localhost:4000/2020/03/02/cicd-02.html"><![CDATA[<p>Here is the guidelines to activate SSL in jenkins.
<!--more-->
Step 1: Generate CSR certificate
Execute the following command to generate csr certificate and give name “demo.ssl.csr“.</p>

<figure class="highlight"><pre><code class="language-javascript" data-lang="javascript"><span class="nx">openssl</span> <span class="nx">req</span> <span class="o">-</span><span class="k">new</span> <span class="o">&gt;</span> <span class="nx">demo</span><span class="p">.</span><span class="nx">ssl</span><span class="p">.</span><span class="nx">csr</span></code></pre></figure>

<p>Step 2: Create a key file
Use your PEM file and execute the following command to create a file for the generating certificate and give the name “demo.cert.key”.</p>

<figure class="highlight"><pre><code class="language-javascript" data-lang="javascript"><span class="nx">openssl</span> <span class="nx">rsa</span> <span class="o">-</span><span class="k">in</span> <span class="nx">privkey</span><span class="p">.</span><span class="nx">pem</span> <span class="o">-</span><span class="nx">out</span> <span class="nx">demo</span><span class="p">.</span><span class="nx">cert</span><span class="p">.</span><span class="nx">key</span></code></pre></figure>

<p>Step 3: Create CSR certificate using Key file
Now we have a Key file and CSR file, run following command to create CSR file and define retention periods.</p>

<figure class="highlight"><pre><code class="language-javascript" data-lang="javascript"><span class="nx">openssl</span> <span class="nx">x509</span> <span class="o">-</span><span class="k">in</span> <span class="nx">demo</span><span class="p">.</span><span class="nx">ssl</span><span class="p">.</span><span class="nx">csr</span> <span class="o">-</span><span class="nx">out</span> <span class="nx">demo</span><span class="p">.</span><span class="nx">cert</span><span class="p">.</span><span class="nx">cert</span> <span class="o">-</span><span class="nx">req</span> <span class="o">-</span><span class="nx">signkey</span> <span class="nx">demo</span><span class="p">.</span><span class="nx">cert</span><span class="p">.</span><span class="nx">key</span> <span class="o">-</span><span class="nx">days</span> <span class="mi">365</span></code></pre></figure>

<p>Step 4: Create pkcs12 file
Now, use following command to create an intermediate pkcs12 file and define following parameters.
Give name of pkcs12 file name, example- jenkins_demo.p12
Set strong password for pkcs12 file
Give FQDN or alias name, example- ericsong</p>

<figure class="highlight"><pre><code class="language-javascript" data-lang="javascript"><span class="nx">openssl</span> <span class="nx">pkcs12</span> <span class="o">-</span><span class="k">export</span> <span class="o">-</span><span class="nx">out</span> <span class="nx">jenkins_demo</span><span class="p">.</span><span class="nx">p12</span> <span class="o">-</span><span class="nx">passout</span> <span class="dl">'</span><span class="s1">pass:songyao1234</span><span class="dl">'</span> <span class="o">-</span><span class="nx">inkey</span> <span class="nx">demo</span><span class="p">.</span><span class="nx">cert</span><span class="p">.</span><span class="nx">key</span> <span class="o">-</span><span class="k">in</span> <span class="nx">demo</span><span class="p">.</span><span class="nx">cert</span><span class="p">.</span><span class="nx">cert</span> <span class="o">-</span><span class="nx">name</span> <span class="nx">ericsong</span></code></pre></figure>

<p>Step 5: Create Java Keystore file (JKS)
Now we will use Ketstore command-line tool to generate a new key “jenkins_demo_jks” and will set a password in deststorepass field.</p>

<figure class="highlight"><pre><code class="language-javascript" data-lang="javascript"><span class="nx">keytool</span> <span class="o">-</span><span class="nx">importkeystore</span> <span class="o">-</span><span class="nx">srckeystore</span> <span class="nx">jenkins_demo</span><span class="p">.</span><span class="nx">p12</span> <span class="o">-</span><span class="nx">srcstorepass</span> <span class="dl">'</span><span class="s1">songyao1234</span><span class="dl">'</span> <span class="o">-</span><span class="nx">srcstoretype</span> <span class="nx">PKCS12</span> <span class="o">-</span><span class="nx">srcalias</span> <span class="nx">ericsong</span> <span class="o">-</span><span class="nx">deststoretype</span> <span class="nx">JKS</span> <span class="o">-</span><span class="nx">destkeystore</span> <span class="nx">jenkins_demo</span><span class="p">.</span><span class="nx">jks</span> <span class="o">-</span><span class="nx">deststorepass</span> <span class="dl">'</span><span class="s1">songyao1234</span><span class="dl">'</span> <span class="o">-</span><span class="nx">destalias</span> <span class="nx">ericsong</span></code></pre></figure>

<p>Step 6: Copy keystore file to Jenkins
Execute following commands to create keystore directory and add keystore file to Jenkins at default location as well as change directory permissions.</p>

<figure class="highlight"><pre><code class="language-javascript" data-lang="javascript"><span class="nx">cd</span> <span class="o">/</span><span class="kd">var</span><span class="sr">/lib/</span><span class="nx">jenkins</span>
<span class="nx">mkdir</span> <span class="p">.</span><span class="nx">keystore</span>
<span class="nx">cp</span> <span class="o">/</span><span class="nx">home</span><span class="o">/</span><span class="nx">sy</span><span class="o">/</span><span class="nx">jenkins_demo</span><span class="p">.</span><span class="nx">jks</span> <span class="o">/</span><span class="kd">var</span><span class="sr">/lib/</span><span class="nx">jenkins</span><span class="o">/</span><span class="p">.</span><span class="nx">keystore</span><span class="o">/</span>
<span class="nx">chmod</span> <span class="mi">700</span> <span class="p">.</span><span class="nx">keystore</span><span class="o">/</span></code></pre></figure>

<p>Step 7: Change in Jenkins file
Make few changes in the Jenkins’s file property. Open the file /etc/default/jenkins file.</p>

<figure class="highlight"><pre><code class="language-javascript" data-lang="javascript"><span class="nx">HTTPS_PORT</span><span class="o">=</span><span class="mi">8088</span>
<span class="nx">KEYSTORE</span><span class="o">=</span><span class="sr">/var/</span><span class="nx">lib</span><span class="o">/</span><span class="nx">jenkins</span><span class="o">/</span><span class="p">.</span><span class="nx">keystore</span><span class="o">/</span><span class="nx">jenkins_demo</span><span class="p">.</span><span class="nx">jks</span>
<span class="nx">PASSWORD</span><span class="o">=</span><span class="nx">songyao1234</span>
<span class="nx">JENKINS_ARGS</span><span class="o">=</span><span class="dl">"</span><span class="s2">--webroot=/var/cache/$NAME/war --httpsPort=$HTTPS_PORT --httpsKeyStore=$KEYSTORE --httpsKeyStorePassword=$PASSWORD --httpPort=-1</span><span class="dl">"</span></code></pre></figure>

<p>Step 8: Validate the configuration</p>

<figure class="highlight"><pre><code class="language-javascript" data-lang="javascript"><span class="nx">sudo</span> <span class="nx">systemctl</span> <span class="nx">restart</span> <span class="nx">jenkins</span>
<span class="nx">sudo</span> <span class="nx">systemctl</span> <span class="nx">status</span> <span class="nx">jenkins</span>
<span class="nx">https</span><span class="p">:</span><span class="c1">//&lt;dns_name/ip&gt;:8088</span></code></pre></figure>

<div id="carouselExampleControls" class="carousel slide mb-4" data-ride="carousel">
    <div class="carousel-inner">
        
            <div class="carousel-item active">
                <img src="https://images.unsplash.com/photo-1421789665209-c9b2a435e3dc?ixlib=rb-0.3.5&amp;ixid=eyJhcHBfaWQiOjEyMDd9&amp;s=5b1016b885e7438c4633109d77368d4d&amp;auto=format&amp;fit=crop&amp;w=1651&amp;q=80" class="d-block w-100" alt="" />
            </div>
        
            <div class="carousel-item ">
                <img src="https://images.unsplash.com/photo-1504626835342-6b01071d182e?ixlib=rb-0.3.5&amp;ixid=eyJhcHBfaWQiOjEyMDd9&amp;s=975855d515c9d56352ee3bfe74287f2b&amp;auto=format&amp;fit=crop&amp;w=1651&amp;q=80" class="d-block w-100" alt="" />
            </div>
        
            <div class="carousel-item ">
                <img src="https://images.unsplash.com/photo-1476514525535-07fb3b4ae5f1?ixlib=rb-0.3.5&amp;ixid=eyJhcHBfaWQiOjEyMDd9&amp;s=468a8c18f5d811cf03c654b653b5089e&amp;auto=format&amp;fit=crop&amp;w=1650&amp;q=80" class="d-block w-100" alt="" />
            </div>
        
            <div class="carousel-item ">
                <img src="https://images.unsplash.com/photo-1506291318501-948562d765d7?ixlib=rb-0.3.5&amp;ixid=eyJhcHBfaWQiOjEyMDd9&amp;s=71ad8e3b7b4bd210182ed5e5c024903b&amp;auto=format&amp;fit=crop&amp;w=1650&amp;q=80" class="d-block w-100" alt="" />
            </div>
        
            <div class="carousel-item ">
                <img src="https://images.unsplash.com/photo-1500402448245-d49c5229c564?ixlib=rb-0.3.5&amp;ixid=eyJhcHBfaWQiOjEyMDd9&amp;s=f19c590b253f803a7f9b643c59017160&amp;auto=format&amp;fit=crop&amp;w=1650&amp;q=80" class="d-block w-100" alt="" />
            </div>
        
    </div>
    <a class="carousel-control-prev" href="#carouselExampleControls" role="button" data-slide="prev">
        <span class="carousel-control-prev-icon" aria-hidden="true"></span>
        <span class="sr-only">Previous</span>
    </a>
    <a class="carousel-control-next" href="#carouselExampleControls" role="button" data-slide="next">
        <span class="carousel-control-next-icon" aria-hidden="true"></span>
        <span class="sr-only">Next</span>
    </a>
</div>

<p>Hope it can be helpful to you.</p>]]></content><author><name></name></author><category term="Jenkins" /><category term="CICD" /><category term="Maven" /><category term="Markdown" /><category term="Android" /><category term="Groovy" /><category term="Java" /><summary type="html"><![CDATA[Here is the guidelines to activate SSL in jenkins.]]></summary></entry><entry><title type="html">How to work with Jenkins,Gitlab and Maven</title><link href="http://localhost:4000/2020/01/17/cicd-01.html" rel="alternate" type="text/html" title="How to work with Jenkins,Gitlab and Maven" /><published>2020-01-17T00:00:00+08:00</published><updated>2020-01-17T00:00:00+08:00</updated><id>http://localhost:4000/2020/01/17/cicd-01</id><content type="html" xml:base="http://localhost:4000/2020/01/17/cicd-01.html"><![CDATA[<p>First of all, we need to install jenkins as the following steps.
<!--more-->
Step 1: install JDK, and we can check it with command “java –version”</p>

<p>Step 2: install android SDK and android NDK if you are working in Android projects</p>

<p>Step 3: install Jenkins
Add the key from official software repository to the apt key in locall</p>

<figure class="highlight"><pre><code class="language-javascript" data-lang="javascript"><span class="nx">wget</span> <span class="o">-</span><span class="nx">q</span> <span class="o">-</span><span class="nx">O</span> <span class="o">-</span> <span class="nx">https</span><span class="p">:</span><span class="c1">//pkg.jenkins.io/debian-stable/jenkins.io.key | sudo apt-key add -</span></code></pre></figure>

<p>Add the address to your locall list</p>

<figure class="highlight"><pre><code class="language-javascript" data-lang="javascript"><span class="nx">sudo</span> <span class="nx">sh</span> <span class="o">-</span><span class="nx">c</span> <span class="dl">'</span><span class="s1">echo deb https://pkg.jenkins.io/debian-stable binary/ &gt; /etc/apt/sources.list.d/jenkins.list</span><span class="dl">'</span></code></pre></figure>

<p>Then you can complete the installation of jenkins by the following commands,</p>

<figure class="highlight"><pre><code class="language-javascript" data-lang="javascript"><span class="nx">sudo</span> <span class="nx">apt</span><span class="o">-</span><span class="kd">get</span> <span class="nx">update</span>
<span class="nx">sudo</span> <span class="nx">apt</span><span class="o">-</span><span class="kd">get</span> <span class="nx">install</span> <span class="nx">jenkins</span>
<span class="nx">sudo</span> <span class="o">/</span><span class="nx">etc</span><span class="o">/</span><span class="nx">init</span><span class="p">.</span><span class="nx">d</span><span class="o">/</span><span class="nx">jenkins</span> <span class="p">[</span><span class="nx">start</span><span class="o">|</span><span class="nx">restart</span><span class="o">|</span><span class="nx">stop</span><span class="p">]</span>
<span class="nx">systemctl</span> <span class="nx">status</span> <span class="nx">jenkins</span></code></pre></figure>

<p>Now we can try to access the home page of jenkins and you can see the login required as below.
<!-- ![](/assets/images/jenkins_login.png) --></p>

<p><img src="/assets/images/jenkins_login.png" alt="Login" style="width:525px;height:480px;" /></p>

<p>Secondly, we need to complete some configurations and install a few plugins in jenkins page,just like gradle,gitlab,email,pipeline(strong recommended),webhook.etc.In addition,we also need to config environment varibles in System configurations and learning how to write jenkinsfile with Groovy.Anyway the multibranch pipeline mode is strongly recommended.
Below is a jenkinsfile sample for building an android APK:</p>

<figure class="highlight"><pre><code class="language-java" data-lang="java"><span class="n">def</span> <span class="n">gradleproperties</span> <span class="o">=</span> <span class="s">"""
    MAVEN_REPO_SNAPSHOTS_URL=http://127.0.0.1:8081/repository/maven-snapshots/
    MAVEN_REPO_RELEASES_URL=http://127.0.0.1:8081/repository/maven-releases/
    MAVEN_REPO_USERNAME=admin
    MAVEN_REPO_PASSWORD=admin
    SIGNPASS=123456
    SIGNCERT=/home/ubuntu/ApkSignCert/demoapp.jks

pipeline {
    agent any
    stages {
        stage('Build') {
          steps {
              sh """</span>
              <span class="err">#</span><span class="n">mkdir</span> <span class="o">/</span><span class="n">root</span><span class="o">/.</span><span class="na">gradle</span>
              <span class="n">echo</span> <span class="err">'$</span><span class="o">{</span><span class="n">gradleproperties</span><span class="o">}</span><span class="err">'</span> <span class="o">&gt;&gt;</span> <span class="o">/</span><span class="n">root</span><span class="o">/.</span><span class="na">gradle</span><span class="o">/</span><span class="n">gradle</span><span class="o">.</span><span class="na">properties</span>
              <span class="s">""</span><span class="err">"</span>
              <span class="n">sh</span> <span class="err">'</span><span class="n">chmod</span> <span class="o">+</span><span class="n">x</span> <span class="n">gradlew</span><span class="err">'</span>
              <span class="n">sh</span> <span class="err">'</span><span class="o">./</span><span class="n">gradlew</span> <span class="n">clean</span> <span class="n">build</span> <span class="o">-</span><span class="n">x</span> <span class="n">check</span> <span class="n">pmd</span><span class="err">'</span>
            <span class="o">}</span>
          <span class="o">}</span>
        <span class="n">stage</span><span class="o">(</span><span class="err">'</span><span class="nc">Archive</span><span class="err">'</span><span class="o">)</span> <span class="o">{</span>
            <span class="n">steps</span> <span class="o">{</span>
                <span class="n">archiveArtifacts</span> <span class="err">'</span><span class="n">app</span><span class="o">/</span><span class="n">build</span><span class="o">/</span><span class="n">outputs</span><span class="cm">/**/</span><span class="o">*.</span><span class="na">apk</span><span class="err">'</span>
            <span class="o">}</span>
        <span class="o">}</span>
        <span class="n">stage</span><span class="o">(</span><span class="err">'</span><span class="nc">Test</span><span class="err">'</span><span class="o">)</span> <span class="o">{</span>
              <span class="n">steps</span> <span class="o">{</span>
                  <span class="n">echo</span> <span class="err">'</span><span class="nc">Testing</span><span class="o">..</span><span class="err">'</span>
              <span class="o">}</span>
        <span class="o">}</span>
    <span class="o">}</span>
    <span class="n">options</span> <span class="o">{</span>
      <span class="n">gitLabConnection</span><span class="o">(</span><span class="err">'</span><span class="nc">Connection2Gitlab</span><span class="err">'</span><span class="o">)</span>
  	<span class="o">}</span>
    <span class="n">post</span> <span class="o">{</span>
      <span class="n">failure</span> <span class="o">{</span>
        <span class="n">updateGitlabCommitStatus</span> <span class="nl">name:</span> <span class="err">'</span><span class="nc">Connection2Gitlab</span><span class="err">'</span><span class="o">,</span> <span class="nl">state:</span> <span class="err">'</span><span class="n">failed</span><span class="err">'</span>
      <span class="o">}</span>
      <span class="n">success</span> <span class="o">{</span>
        <span class="n">updateGitlabCommitStatus</span> <span class="nl">name:</span> <span class="err">'</span><span class="nc">Connection2Gitlab</span><span class="err">'</span><span class="o">,</span> <span class="nl">state:</span> <span class="err">'</span><span class="n">success</span><span class="err">'</span>
      <span class="o">}</span>
    <span class="o">}</span>
<span class="o">}</span></code></pre></figure>

<p>Finally you can see the artifact in build page and can download by manual.Moreover, we can deploy private Maven repository if we need to publish android libraries(Jar/aar),you just need to add a stage in jenkinsfile for publishing artifact to your Maven repository.So your Application can pull the anroid libraries from your Maven repository with credentials you set in Maven.</p>

<p>Add configs in the root build.gradle</p>

<figure class="highlight"><pre><code class="language-javascript" data-lang="javascript"><span class="nx">allprojects</span> <span class="p">{</span>

    <span class="nx">repositories</span> <span class="p">{</span>
		<span class="nx">jcenter</span><span class="p">()</span>
		<span class="nx">google</span><span class="p">()</span>
		<span class="nx">mavenCentral</span><span class="p">()</span>
    <span class="p">}</span>
	<span class="nx">maven</span> <span class="p">{</span>
		<span class="nx">url</span> <span class="nx">MAVEN_REPO_SNAPSHOTS_URL</span>
		<span class="nx">credentials</span> <span class="p">{</span>
			<span class="nx">username</span> <span class="nx">MAVEN_REPO_USERNAME</span>
			<span class="nx">password</span> <span class="nx">MAVEN_REPO_PASSWORD</span>
		<span class="p">}</span>
	<span class="p">}</span>
	<span class="nx">maven</span> <span class="p">{</span>
		<span class="nx">url</span> <span class="nx">MAVEN_REPO_RELEASES_URL</span>
		<span class="nx">credentials</span> <span class="p">{</span>
			<span class="nx">username</span> <span class="nx">MAVEN_REPO_USERNAME</span>
			<span class="nx">password</span> <span class="nx">MAVEN_REPO_PASSWORD</span>
		<span class="p">}</span>
	<span class="p">}</span>

    <span class="p">}</span>
<span class="p">}</span></code></pre></figure>

<p>We can install and deply nexus Maven repository as following steps.</p>

<figure class="highlight"><pre><code class="language-javascript" data-lang="javascript"><span class="nx">Download</span> <span class="kr">package</span> <span class="k">from</span> <span class="nx">https</span><span class="p">:</span><span class="c1">//www.sonatype.com/products/repository-oss-download</span>
<span class="nx">tar</span> <span class="o">-</span><span class="nx">zxvf</span>  <span class="nx">nexus</span><span class="o">-</span><span class="mf">3.39</span><span class="p">.</span><span class="mi">0</span><span class="o">-</span><span class="mi">01</span><span class="o">-</span><span class="nx">bundle</span><span class="p">.</span><span class="nx">tar</span><span class="p">.</span><span class="nx">gz</span>

<span class="c1">//Enablie start service automatically</span>
<span class="nx">cd</span> <span class="o">/</span><span class="nx">etc</span><span class="o">/</span><span class="nx">init</span><span class="p">.</span><span class="nx">d</span>
<span class="nx">sudo</span> <span class="nx">update</span><span class="o">-</span><span class="nx">rc</span><span class="p">.</span><span class="nx">d</span> <span class="nx">nexus</span> <span class="nx">defaults</span>
<span class="nx">sudo</span> <span class="nx">service</span> <span class="nx">nexus</span> <span class="nx">start</span></code></pre></figure>

<p>Now we can publish our android libraries(Jar/aar) to the Maven repository.we can publish snapshots version in our project with command as “gradlew publishToMavenLocal” and publish release version in jenkins with command “gradlew publish”
Below is an example for publish android aar</p>

<figure class="highlight"><pre><code class="language-javascript" data-lang="javascript"><span class="nx">task</span> <span class="nx">sourceJar</span><span class="p">(</span><span class="nx">type</span><span class="p">:</span> <span class="nx">Jar</span><span class="p">)</span> <span class="p">{</span>
    <span class="nx">classifier</span> <span class="o">=</span> <span class="dl">'</span><span class="s1">sources</span><span class="dl">'</span>
    <span class="k">from</span> <span class="nx">android</span><span class="p">.</span><span class="nx">sourceSets</span><span class="p">.</span><span class="nx">main</span><span class="p">.</span><span class="nx">java</span><span class="p">.</span><span class="nx">srcDirs</span>
<span class="p">}</span>
<span class="nx">apply</span> <span class="nx">plugin</span><span class="p">:</span> <span class="dl">'</span><span class="s1">maven-publish</span><span class="dl">'</span>

<span class="nx">publishing</span> <span class="p">{</span>
    <span class="nx">publications</span> <span class="p">{</span>
        <span class="nx">aar</span><span class="p">(</span><span class="nx">MavenPublication</span><span class="p">)</span> <span class="p">{</span>
            <span class="nx">artifactId</span> <span class="o">=</span> <span class="nx">project</span><span class="p">.</span><span class="nx">name</span>
            <span class="c1">//artifact sourceJar</span>
            <span class="nx">artifact</span><span class="p">(</span><span class="dl">"</span><span class="s2">$buildDir/outputs/aar/${project.name}-release-${project.version}.aar</span><span class="dl">"</span><span class="p">)</span>

            <span class="nx">pom</span><span class="p">.</span><span class="nx">withXml</span> <span class="p">{</span>
                <span class="nx">def</span> <span class="nx">dependenciesNode</span> <span class="o">=</span> <span class="nx">asNode</span><span class="p">().</span><span class="nx">appendNode</span><span class="p">(</span><span class="dl">'</span><span class="s1">dependencies</span><span class="dl">'</span><span class="p">)</span>
                <span class="nx">ext</span><span class="p">.</span><span class="nx">addDependency</span> <span class="o">=</span> <span class="p">{</span><span class="nx">Dependency</span> <span class="nx">dep</span><span class="p">,</span> <span class="nb">String</span> <span class="nx">scope</span> <span class="o">-&gt;</span>
                    <span class="k">if</span> <span class="p">(</span><span class="nx">dep</span><span class="p">.</span><span class="nx">group</span> <span class="o">==</span> <span class="kc">null</span> <span class="o">||</span> <span class="nx">dep</span><span class="p">.</span><span class="nx">version</span> <span class="o">==</span> <span class="kc">null</span>
                            <span class="o">||</span> <span class="nx">dep</span><span class="p">.</span><span class="nx">name</span> <span class="o">==</span> <span class="kc">null</span> <span class="o">||</span> <span class="dl">"</span><span class="s2">unspecified</span><span class="dl">"</span> <span class="o">==</span> <span class="nx">dep</span><span class="p">.</span><span class="nx">name</span><span class="p">)</span>
                        <span class="k">return</span>
                    <span class="nx">def</span> <span class="nx">dependency</span> <span class="o">=</span> <span class="nx">dependenciesNode</span><span class="p">.</span><span class="nx">appendNode</span><span class="p">(</span><span class="dl">'</span><span class="s1">dependency</span><span class="dl">'</span><span class="p">)</span>
                    <span class="nx">dependency</span><span class="p">.</span><span class="nx">appendNode</span><span class="p">(</span><span class="dl">'</span><span class="s1">groupId</span><span class="dl">'</span><span class="p">,</span> <span class="nx">dep</span><span class="p">.</span><span class="nx">group</span><span class="p">)</span>
                    <span class="nx">dependency</span><span class="p">.</span><span class="nx">appendNode</span><span class="p">(</span><span class="dl">'</span><span class="s1">artifactId</span><span class="dl">'</span><span class="p">,</span> <span class="nx">dep</span><span class="p">.</span><span class="nx">name</span><span class="p">)</span>
                    <span class="nx">dependency</span><span class="p">.</span><span class="nx">appendNode</span><span class="p">(</span><span class="dl">'</span><span class="s1">version</span><span class="dl">'</span><span class="p">,</span> <span class="nx">dep</span><span class="p">.</span><span class="nx">version</span><span class="p">)</span>
                    <span class="nx">dependency</span><span class="p">.</span><span class="nx">appendNode</span><span class="p">(</span><span class="dl">'</span><span class="s1">scope</span><span class="dl">'</span><span class="p">,</span> <span class="nx">scope</span><span class="p">)</span>
                    <span class="k">if</span> <span class="p">(</span><span class="o">!</span><span class="nx">dep</span><span class="p">.</span><span class="nx">transitive</span><span class="p">)</span> <span class="p">{</span>
                        <span class="nx">final</span> <span class="nx">exclusion</span> <span class="o">=</span> <span class="nx">dependency</span><span class="p">.</span><span class="nx">appendNode</span><span class="p">(</span><span class="dl">'</span><span class="s1">exclusions</span><span class="dl">'</span><span class="p">).</span><span class="nx">appendNode</span><span class="p">(</span><span class="dl">'</span><span class="s1">exclusion</span><span class="dl">'</span><span class="p">)</span>
                        <span class="nx">exclusion</span><span class="p">.</span><span class="nx">appendNode</span><span class="p">(</span><span class="dl">'</span><span class="s1">groupId</span><span class="dl">'</span><span class="p">,</span> <span class="dl">'</span><span class="s1">*</span><span class="dl">'</span><span class="p">)</span>
                        <span class="nx">exclusion</span><span class="p">.</span><span class="nx">appendNode</span><span class="p">(</span><span class="dl">'</span><span class="s1">artifactId</span><span class="dl">'</span><span class="p">,</span> <span class="dl">'</span><span class="s1">*</span><span class="dl">'</span><span class="p">)</span>
                    <span class="p">}</span> <span class="k">else</span> <span class="k">if</span> <span class="p">(</span><span class="o">!</span><span class="nx">dep</span><span class="p">.</span><span class="nx">properties</span><span class="p">.</span><span class="nx">excludeRules</span><span class="p">.</span><span class="nx">empty</span><span class="p">)</span> <span class="p">{</span>
                        <span class="nx">final</span> <span class="nx">exclusion</span> <span class="o">=</span> <span class="nx">dependency</span><span class="p">.</span><span class="nx">appendNode</span><span class="p">(</span><span class="dl">'</span><span class="s1">exclusions</span><span class="dl">'</span><span class="p">).</span><span class="nx">appendNode</span><span class="p">(</span><span class="dl">'</span><span class="s1">exclusion</span><span class="dl">'</span><span class="p">)</span>
                        <span class="nx">dep</span><span class="p">.</span><span class="nx">properties</span><span class="p">.</span><span class="nx">excludeRules</span><span class="p">.</span><span class="nx">each</span> <span class="p">{</span> <span class="nx">ExcludeRule</span> <span class="nx">rule</span> <span class="o">-&gt;</span>
                            <span class="nx">exclusion</span><span class="p">.</span><span class="nx">appendNode</span><span class="p">(</span><span class="dl">'</span><span class="s1">groupId</span><span class="dl">'</span><span class="p">,</span> <span class="nx">rule</span><span class="p">.</span><span class="nx">group</span> <span class="p">?:</span> <span class="dl">'</span><span class="s1">*</span><span class="dl">'</span><span class="p">)</span>
                            <span class="nx">exclusion</span><span class="p">.</span><span class="nx">appendNode</span><span class="p">(</span><span class="dl">'</span><span class="s1">artifactId</span><span class="dl">'</span><span class="p">,</span> <span class="nx">rule</span><span class="p">.</span><span class="nx">module</span> <span class="p">?:</span> <span class="dl">'</span><span class="s1">*</span><span class="dl">'</span><span class="p">)</span>
                        <span class="p">}</span>
                    <span class="p">}</span>
                <span class="p">}</span>

                <span class="nx">configurations</span><span class="p">.</span><span class="nx">compile</span><span class="p">.</span><span class="nx">getDependencies</span><span class="p">().</span><span class="nx">each</span> <span class="p">{</span> <span class="nx">dep</span> <span class="o">-&gt;</span> <span class="nx">addDependency</span><span class="p">(</span><span class="nx">dep</span><span class="p">,</span> <span class="dl">"</span><span class="s2">compile</span><span class="dl">"</span><span class="p">)</span> <span class="p">}</span>
                <span class="nx">configurations</span><span class="p">.</span><span class="nx">api</span><span class="p">.</span><span class="nx">getDependencies</span><span class="p">().</span><span class="nx">each</span> <span class="p">{</span> <span class="nx">dep</span> <span class="o">-&gt;</span> <span class="nx">addDependency</span><span class="p">(</span><span class="nx">dep</span><span class="p">,</span> <span class="dl">"</span><span class="s2">compile</span><span class="dl">"</span><span class="p">)</span> <span class="p">}</span>
                <span class="nx">configurations</span><span class="p">.</span><span class="nx">implementation</span><span class="p">.</span><span class="nx">getDependencies</span><span class="p">().</span><span class="nx">each</span> <span class="p">{</span> <span class="nx">dep</span> <span class="o">-&gt;</span> <span class="nx">addDependency</span><span class="p">(</span><span class="nx">dep</span><span class="p">,</span> <span class="dl">"</span><span class="s2">runtime</span><span class="dl">"</span><span class="p">)</span> <span class="p">}</span>
            <span class="p">}</span>
        <span class="p">}</span>
    <span class="p">}</span>
    <span class="nx">repositories</span> <span class="p">{</span>
        <span class="nx">maven</span> <span class="p">{</span>
            <span class="nx">url</span> <span class="o">=</span> <span class="nx">version</span><span class="p">.</span><span class="nx">endsWith</span><span class="p">(</span><span class="dl">"</span><span class="s2">SNAPSHOT</span><span class="dl">"</span><span class="p">)</span> <span class="p">?</span> <span class="nx">MAVEN_REPO_SNAPSHOTS_URL</span> <span class="p">:</span> <span class="nx">MAVEN_REPO_RELEASES_URL</span>
            <span class="nx">credentials</span> <span class="p">{</span>
                <span class="nx">username</span> <span class="nx">MAVEN_REPO_USERNAME</span>
                <span class="nx">password</span> <span class="nx">MAVEN_REPO_PASSWORD</span>
            <span class="p">}</span>
        <span class="p">}</span>
    <span class="p">}</span>
<span class="p">}</span>

<span class="nx">tasks</span><span class="p">.</span><span class="nx">withType</span><span class="p">(</span><span class="nx">PublishToMavenLocal</span><span class="p">).</span><span class="nx">each</span> <span class="p">{</span>
    <span class="nx">task</span> <span class="o">-&gt;</span> <span class="nx">task</span><span class="p">.</span><span class="nx">dependsOn</span><span class="p">(</span><span class="dl">'</span><span class="s1">assembleRelease</span><span class="dl">'</span><span class="p">)</span>
<span class="p">}</span>
<span class="nx">tasks</span><span class="p">.</span><span class="nx">withType</span><span class="p">(</span><span class="nx">PublishToMavenRepository</span><span class="p">).</span><span class="nx">each</span> <span class="p">{</span>
    <span class="nx">task</span> <span class="o">-&gt;</span> <span class="nx">task</span><span class="p">.</span><span class="nx">dependsOn</span><span class="p">(</span><span class="dl">'</span><span class="s1">assembleRelease</span><span class="dl">'</span><span class="p">,</span> <span class="nx">tasks</span><span class="p">.</span><span class="nx">withType</span><span class="p">(</span><span class="nx">PublishToMavenLocal</span><span class="p">))</span>
<span class="p">}</span></code></pre></figure>

<p>Anyway we can schedule build task in jenkins and let it auto build when new release branch or tag was created in Gitlab,Jenkins will excute stage build,stage publish to Maven, stage unit test ,stage javadoc, stage notify Gitlab and email to maintainers,etc.</p>

<p><img src="https://images.unsplash.com/photo-1658188920091-8d38c64bcb79?ixlib=rb-1.2.1&amp;ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&amp;auto=format&amp;fit=crop&amp;w=464&amp;q=80" /></p>]]></content><author><name></name></author><category term="Jenkins" /><category term="CICD" /><category term="Maven" /><category term="Gitlab" /><category term="Android" /><category term="Groovy" /><category term="Java" /><summary type="html"><![CDATA[First of all, we need to install jenkins as the following steps.]]></summary></entry></feed>