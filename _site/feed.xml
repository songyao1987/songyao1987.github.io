<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="4.2.2">Jekyll</generator><link href="http://localhost:4000/feed.xml" rel="self" type="application/atom+xml" /><link href="http://localhost:4000/" rel="alternate" type="text/html" /><updated>2022-07-21T21:49:52+08:00</updated><id>http://localhost:4000/feed.xml</id><title type="html">EricSong</title><entry><title type="html">How to publish your android library to MavenCenter</title><link href="http://localhost:4000/2021/05/06/friday-theme-carousel7.html" rel="alternate" type="text/html" title="How to publish your android library to MavenCenter" /><published>2021-05-06T00:00:00+08:00</published><updated>2021-05-06T00:00:00+08:00</updated><id>http://localhost:4000/2021/05/06/friday-theme-carousel7</id><content type="html" xml:base="http://localhost:4000/2021/05/06/friday-theme-carousel7.html"><![CDATA[<p>I will take my first published library as an example and make this a single source of guidance for all of you who are interested in publishing Android libraries.
<!--more-->
<img src="https://images.unsplash.com/photo-1657659448918-f54b8cdc3c67?ixlib=rb-1.2.1&amp;ixid=MnwxMjA3fDB8MHx0b3BpYy1mZWVkfDQ2fEpwZzZLaWRsLUhrfHxlbnwwfHx8fA%3D%3D&amp;auto=format&amp;fit=crop&amp;w=500&amp;q=60" /></p>]]></content><author><name></name></author><category term="Jenkins" /><category term="CICD" /><category term="Maven" /><category term="Gitlab" /><category term="Android" /><category term="Groovy" /><category term="Java" /><summary type="html"><![CDATA[I will take my first published library as an example and make this a single source of guidance for all of you who are interested in publishing Android libraries.]]></summary></entry><entry><title type="html">How to config SSL in Jenkins</title><link href="http://localhost:4000/2020/03/02/friday-theme-carousel.html" rel="alternate" type="text/html" title="How to config SSL in Jenkins" /><published>2020-03-02T00:00:00+08:00</published><updated>2020-03-02T00:00:00+08:00</updated><id>http://localhost:4000/2020/03/02/friday-theme-carousel</id><content type="html" xml:base="http://localhost:4000/2020/03/02/friday-theme-carousel.html"><![CDATA[<p>Here is the guidelines to activate SSL in jenkins.
<!--more-->
Step 1: Generate CSR certificate
Execute the following command to generate csr certificate and give name “demo.ssl.csr“.</p>

<figure class="highlight"><pre><code class="language-javascript" data-lang="javascript"><span class="nx">openssl</span> <span class="nx">req</span> <span class="o">-</span><span class="k">new</span> <span class="o">&gt;</span> <span class="nx">demo</span><span class="p">.</span><span class="nx">ssl</span><span class="p">.</span><span class="nx">csr</span></code></pre></figure>

<p>Step 2: Create a key file
Use your PEM file and execute the following command to create a file for the generating certificate and give the name “demo.cert.key”.</p>

<figure class="highlight"><pre><code class="language-javascript" data-lang="javascript"><span class="nx">openssl</span> <span class="nx">rsa</span> <span class="o">-</span><span class="k">in</span> <span class="nx">privkey</span><span class="p">.</span><span class="nx">pem</span> <span class="o">-</span><span class="nx">out</span> <span class="nx">demo</span><span class="p">.</span><span class="nx">cert</span><span class="p">.</span><span class="nx">key</span></code></pre></figure>

<p>Step 3: Create CSR certificate using Key file
Now we have a Key file and CSR file, run following command to create CSR file and define retention periods.</p>

<figure class="highlight"><pre><code class="language-javascript" data-lang="javascript"><span class="nx">openssl</span> <span class="nx">x509</span> <span class="o">-</span><span class="k">in</span> <span class="nx">demo</span><span class="p">.</span><span class="nx">ssl</span><span class="p">.</span><span class="nx">csr</span> <span class="o">-</span><span class="nx">out</span> <span class="nx">demo</span><span class="p">.</span><span class="nx">cert</span><span class="p">.</span><span class="nx">cert</span> <span class="o">-</span><span class="nx">req</span> <span class="o">-</span><span class="nx">signkey</span> <span class="nx">demo</span><span class="p">.</span><span class="nx">cert</span><span class="p">.</span><span class="nx">key</span> <span class="o">-</span><span class="nx">days</span> <span class="mi">365</span></code></pre></figure>

<p>Step 4: Create pkcs12 file
Now, use following command to create an intermediate pkcs12 file and define following parameters.
Give name of pkcs12 file name, example- jenkins_demo.p12
Set strong password for pkcs12 file
Give FQDN or alias name, example- ericsong</p>

<figure class="highlight"><pre><code class="language-javascript" data-lang="javascript"><span class="nx">openssl</span> <span class="nx">pkcs12</span> <span class="o">-</span><span class="k">export</span> <span class="o">-</span><span class="nx">out</span> <span class="nx">jenkins_demo</span><span class="p">.</span><span class="nx">p12</span> <span class="o">-</span><span class="nx">passout</span> <span class="dl">'</span><span class="s1">pass:songyao1234</span><span class="dl">'</span> <span class="o">-</span><span class="nx">inkey</span> <span class="nx">demo</span><span class="p">.</span><span class="nx">cert</span><span class="p">.</span><span class="nx">key</span> <span class="o">-</span><span class="k">in</span> <span class="nx">demo</span><span class="p">.</span><span class="nx">cert</span><span class="p">.</span><span class="nx">cert</span> <span class="o">-</span><span class="nx">name</span> <span class="nx">ericsong</span></code></pre></figure>

<p>Step 5: Create Java Keystore file (JKS)
Now we will use Ketstore command-line tool to generate a new key “jenkins_demo_jks” and will set a password in deststorepass field.</p>

<figure class="highlight"><pre><code class="language-javascript" data-lang="javascript"><span class="nx">keytool</span> <span class="o">-</span><span class="nx">importkeystore</span> <span class="o">-</span><span class="nx">srckeystore</span> <span class="nx">jenkins_demo</span><span class="p">.</span><span class="nx">p12</span> <span class="o">-</span><span class="nx">srcstorepass</span> <span class="dl">'</span><span class="s1">songyao1234</span><span class="dl">'</span> <span class="o">-</span><span class="nx">srcstoretype</span> <span class="nx">PKCS12</span> <span class="o">-</span><span class="nx">srcalias</span> <span class="nx">ericsong</span> <span class="o">-</span><span class="nx">deststoretype</span> <span class="nx">JKS</span> <span class="o">-</span><span class="nx">destkeystore</span> <span class="nx">jenkins_demo</span><span class="p">.</span><span class="nx">jks</span> <span class="o">-</span><span class="nx">deststorepass</span> <span class="dl">'</span><span class="s1">songyao1234</span><span class="dl">'</span> <span class="o">-</span><span class="nx">destalias</span> <span class="nx">ericsong</span></code></pre></figure>

<p>Step 6: Copy keystore file to Jenkins
Execute following commands to create keystore directory and add keystore file to Jenkins at default location as well as change directory permissions.</p>

<figure class="highlight"><pre><code class="language-javascript" data-lang="javascript"><span class="nx">cd</span> <span class="o">/</span><span class="kd">var</span><span class="sr">/lib/</span><span class="nx">jenkins</span>
<span class="nx">mkdir</span> <span class="p">.</span><span class="nx">keystore</span>
<span class="nx">cp</span> <span class="o">/</span><span class="nx">home</span><span class="o">/</span><span class="nx">sy</span><span class="o">/</span><span class="nx">jenkins_demo</span><span class="p">.</span><span class="nx">jks</span> <span class="o">/</span><span class="kd">var</span><span class="sr">/lib/</span><span class="nx">jenkins</span><span class="o">/</span><span class="p">.</span><span class="nx">keystore</span><span class="o">/</span>
<span class="nx">chmod</span> <span class="mi">700</span> <span class="p">.</span><span class="nx">keystore</span><span class="o">/</span></code></pre></figure>

<p>Step 7: Change in Jenkins file
Make few changes in the Jenkins’s file property. Open the file /etc/default/jenkins file.</p>

<figure class="highlight"><pre><code class="language-javascript" data-lang="javascript"><span class="nx">HTTPS_PORT</span><span class="o">=</span><span class="mi">8088</span>
<span class="nx">KEYSTORE</span><span class="o">=</span><span class="sr">/var/</span><span class="nx">lib</span><span class="o">/</span><span class="nx">jenkins</span><span class="o">/</span><span class="p">.</span><span class="nx">keystore</span><span class="o">/</span><span class="nx">jenkins_demo</span><span class="p">.</span><span class="nx">jks</span>
<span class="nx">PASSWORD</span><span class="o">=</span><span class="nx">songyao1234</span>
<span class="nx">JENKINS_ARGS</span><span class="o">=</span><span class="dl">"</span><span class="s2">--webroot=/var/cache/$NAME/war --httpsPort=$HTTPS_PORT --httpsKeyStore=$KEYSTORE --httpsKeyStorePassword=$PASSWORD --httpPort=-1</span><span class="dl">"</span></code></pre></figure>

<p>Step 8: Validate the configuration</p>

<figure class="highlight"><pre><code class="language-javascript" data-lang="javascript"><span class="nx">sudo</span> <span class="nx">systemctl</span> <span class="nx">restart</span> <span class="nx">jenkins</span>
<span class="nx">sudo</span> <span class="nx">systemctl</span> <span class="nx">status</span> <span class="nx">jenkins</span>
<span class="nx">https</span><span class="p">:</span><span class="c1">//&lt;dns_name/ip&gt;:8088</span></code></pre></figure>

<div id="carouselExampleControls" class="carousel slide mb-4" data-ride="carousel">
    <div class="carousel-inner">
        
            <div class="carousel-item active">
                <img src="https://images.unsplash.com/photo-1421789665209-c9b2a435e3dc?ixlib=rb-0.3.5&amp;ixid=eyJhcHBfaWQiOjEyMDd9&amp;s=5b1016b885e7438c4633109d77368d4d&amp;auto=format&amp;fit=crop&amp;w=1651&amp;q=80" class="d-block w-100" alt="" />
            </div>
        
            <div class="carousel-item ">
                <img src="https://images.unsplash.com/photo-1504626835342-6b01071d182e?ixlib=rb-0.3.5&amp;ixid=eyJhcHBfaWQiOjEyMDd9&amp;s=975855d515c9d56352ee3bfe74287f2b&amp;auto=format&amp;fit=crop&amp;w=1651&amp;q=80" class="d-block w-100" alt="" />
            </div>
        
            <div class="carousel-item ">
                <img src="https://images.unsplash.com/photo-1476514525535-07fb3b4ae5f1?ixlib=rb-0.3.5&amp;ixid=eyJhcHBfaWQiOjEyMDd9&amp;s=468a8c18f5d811cf03c654b653b5089e&amp;auto=format&amp;fit=crop&amp;w=1650&amp;q=80" class="d-block w-100" alt="" />
            </div>
        
            <div class="carousel-item ">
                <img src="https://images.unsplash.com/photo-1506291318501-948562d765d7?ixlib=rb-0.3.5&amp;ixid=eyJhcHBfaWQiOjEyMDd9&amp;s=71ad8e3b7b4bd210182ed5e5c024903b&amp;auto=format&amp;fit=crop&amp;w=1650&amp;q=80" class="d-block w-100" alt="" />
            </div>
        
            <div class="carousel-item ">
                <img src="https://images.unsplash.com/photo-1500402448245-d49c5229c564?ixlib=rb-0.3.5&amp;ixid=eyJhcHBfaWQiOjEyMDd9&amp;s=f19c590b253f803a7f9b643c59017160&amp;auto=format&amp;fit=crop&amp;w=1650&amp;q=80" class="d-block w-100" alt="" />
            </div>
        
    </div>
    <a class="carousel-control-prev" href="#carouselExampleControls" role="button" data-slide="prev">
        <span class="carousel-control-prev-icon" aria-hidden="true"></span>
        <span class="sr-only">Previous</span>
    </a>
    <a class="carousel-control-next" href="#carouselExampleControls" role="button" data-slide="next">
        <span class="carousel-control-next-icon" aria-hidden="true"></span>
        <span class="sr-only">Next</span>
    </a>
</div>

<p>Hope it can be helpful to you.</p>]]></content><author><name></name></author><category term="Jenkins" /><category term="CICD" /><category term="Maven" /><category term="Markdown" /><category term="Android" /><category term="Groovy" /><category term="Java" /><summary type="html"><![CDATA[Here is the guidelines to activate SSL in jenkins.]]></summary></entry><entry><title type="html">How to work with Jenkins,Gitlab and Maven</title><link href="http://localhost:4000/2020/01/17/friday-theme-carousel0.html" rel="alternate" type="text/html" title="How to work with Jenkins,Gitlab and Maven" /><published>2020-01-17T00:00:00+08:00</published><updated>2020-01-17T00:00:00+08:00</updated><id>http://localhost:4000/2020/01/17/friday-theme-carousel0</id><content type="html" xml:base="http://localhost:4000/2020/01/17/friday-theme-carousel0.html"><![CDATA[<p>First of all, we need to install jenkins as the following steps.
<!--more-->
Step 1: install JDK, and we can check it with command “java –version”</p>

<p>Step 2: install android SDK and android NDK if you are working in Android projects</p>

<p>Step 3: install Jenkins
Add the key from official software repository to the apt key in locall</p>

<figure class="highlight"><pre><code class="language-javascript" data-lang="javascript"><span class="nx">wget</span> <span class="o">-</span><span class="nx">q</span> <span class="o">-</span><span class="nx">O</span> <span class="o">-</span> <span class="nx">https</span><span class="p">:</span><span class="c1">//pkg.jenkins.io/debian-stable/jenkins.io.key | sudo apt-key add -</span></code></pre></figure>

<p>Add the address to your locall list</p>

<figure class="highlight"><pre><code class="language-javascript" data-lang="javascript"><span class="nx">sudo</span> <span class="nx">sh</span> <span class="o">-</span><span class="nx">c</span> <span class="dl">'</span><span class="s1">echo deb https://pkg.jenkins.io/debian-stable binary/ &gt; /etc/apt/sources.list.d/jenkins.list</span><span class="dl">'</span></code></pre></figure>

<p>Then you can complete the installation of jenkins by the following commands,</p>

<figure class="highlight"><pre><code class="language-javascript" data-lang="javascript"><span class="nx">sudo</span> <span class="nx">apt</span><span class="o">-</span><span class="kd">get</span> <span class="nx">update</span>
<span class="nx">sudo</span> <span class="nx">apt</span><span class="o">-</span><span class="kd">get</span> <span class="nx">install</span> <span class="nx">jenkins</span>
<span class="nx">sudo</span> <span class="o">/</span><span class="nx">etc</span><span class="o">/</span><span class="nx">init</span><span class="p">.</span><span class="nx">d</span><span class="o">/</span><span class="nx">jenkins</span> <span class="p">[</span><span class="nx">start</span><span class="o">|</span><span class="nx">restart</span><span class="o">|</span><span class="nx">stop</span><span class="p">]</span>
<span class="nx">systemctl</span> <span class="nx">status</span> <span class="nx">jenkins</span></code></pre></figure>

<p>Now we can try to access the home page of jenkins and you can see the login required as below.
<!-- ![](/assets/images/jenkins_login.png) --></p>

<p><img src="/assets/images/jenkins_login.png" alt="Login" style="width:525px;height:480px;" /></p>

<p>Secondly, we need to complete some configurations and install a few plugins in jenkins page,just like gradle,gitlab,email,pipeline(strong recommended),webhook.etc.In addition,we also need to config environment varibles in System configurations and learning how to write jenkinsfile with Groovy.Anyway the multibranch pipeline mode is strongly recommended.
Below is a jenkinsfile sample for building an android APK:</p>

<figure class="highlight"><pre><code class="language-java" data-lang="java"><span class="n">def</span> <span class="n">gradleproperties</span> <span class="o">=</span> <span class="s">"""
    MAVEN_REPO_SNAPSHOTS_URL=http://127.0.0.1:8081/repository/maven-snapshots/
    MAVEN_REPO_RELEASES_URL=http://127.0.0.1:8081/repository/maven-releases/
    MAVEN_REPO_USERNAME=admin
    MAVEN_REPO_PASSWORD=admin
    SIGNPASS=123456
    SIGNCERT=/home/ubuntu/ApkSignCert/demoapp.jks

pipeline {
    agent any
    stages {
        stage('Build') {
          steps {
              sh """</span>
              <span class="err">#</span><span class="n">mkdir</span> <span class="o">/</span><span class="n">root</span><span class="o">/.</span><span class="na">gradle</span>
              <span class="n">echo</span> <span class="err">'$</span><span class="o">{</span><span class="n">gradleproperties</span><span class="o">}</span><span class="err">'</span> <span class="o">&gt;&gt;</span> <span class="o">/</span><span class="n">root</span><span class="o">/.</span><span class="na">gradle</span><span class="o">/</span><span class="n">gradle</span><span class="o">.</span><span class="na">properties</span>
              <span class="s">""</span><span class="err">"</span>
              <span class="n">sh</span> <span class="err">'</span><span class="n">chmod</span> <span class="o">+</span><span class="n">x</span> <span class="n">gradlew</span><span class="err">'</span>
              <span class="n">sh</span> <span class="err">'</span><span class="o">./</span><span class="n">gradlew</span> <span class="n">clean</span> <span class="n">build</span> <span class="o">-</span><span class="n">x</span> <span class="n">check</span> <span class="n">pmd</span><span class="err">'</span>
            <span class="o">}</span>
          <span class="o">}</span>
        <span class="n">stage</span><span class="o">(</span><span class="err">'</span><span class="nc">Archive</span><span class="err">'</span><span class="o">)</span> <span class="o">{</span>
            <span class="n">steps</span> <span class="o">{</span>
                <span class="n">archiveArtifacts</span> <span class="err">'</span><span class="n">app</span><span class="o">/</span><span class="n">build</span><span class="o">/</span><span class="n">outputs</span><span class="cm">/**/</span><span class="o">*.</span><span class="na">apk</span><span class="err">'</span>
            <span class="o">}</span>
        <span class="o">}</span>
        <span class="n">stage</span><span class="o">(</span><span class="err">'</span><span class="nc">Test</span><span class="err">'</span><span class="o">)</span> <span class="o">{</span>
              <span class="n">steps</span> <span class="o">{</span>
                  <span class="n">echo</span> <span class="err">'</span><span class="nc">Testing</span><span class="o">..</span><span class="err">'</span>
              <span class="o">}</span>
        <span class="o">}</span>
    <span class="o">}</span>
    <span class="n">options</span> <span class="o">{</span>
      <span class="n">gitLabConnection</span><span class="o">(</span><span class="err">'</span><span class="nc">Connection2Gitlab</span><span class="err">'</span><span class="o">)</span>
  	<span class="o">}</span>
    <span class="n">post</span> <span class="o">{</span>
      <span class="n">failure</span> <span class="o">{</span>
        <span class="n">updateGitlabCommitStatus</span> <span class="nl">name:</span> <span class="err">'</span><span class="nc">Connection2Gitlab</span><span class="err">'</span><span class="o">,</span> <span class="nl">state:</span> <span class="err">'</span><span class="n">failed</span><span class="err">'</span>
      <span class="o">}</span>
      <span class="n">success</span> <span class="o">{</span>
        <span class="n">updateGitlabCommitStatus</span> <span class="nl">name:</span> <span class="err">'</span><span class="nc">Connection2Gitlab</span><span class="err">'</span><span class="o">,</span> <span class="nl">state:</span> <span class="err">'</span><span class="n">success</span><span class="err">'</span>
      <span class="o">}</span>
    <span class="o">}</span>
<span class="o">}</span></code></pre></figure>

<p>Finally you can see the artifact in build page and can download by manual.</p>]]></content><author><name></name></author><category term="Jenkins" /><category term="CICD" /><category term="Maven" /><category term="Gitlab" /><category term="Android" /><category term="Groovy" /><category term="Java" /><summary type="html"><![CDATA[First of all, we need to install jenkins as the following steps.]]></summary></entry></feed>